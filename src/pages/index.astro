---
import Papa from 'papaparse'

import TimelineChart from '@/components/Chart'
import Layout from '@layouts/Layout.astro'

import { data as rawData } from './../data/data'
import jsonData from './../data/data.json'

import type { TimelineChartConfig, TimelineChartDataEntry, TimelineChartRawDataEntry } from '@types'
import { timeParse } from 'd3'
import { ChartColor, YAxisSide } from '@/enums'

const { errors, data: parsedData }: { errors: any[]; data: any[] } = Papa.parse(rawData, {
	dynamicTyping: true,
})

if (errors.length) {
	throw new Error(`Error parsing data: ${JSON.stringify(errors)}`)
}

const columns: string[] = parsedData[0]
const dataset: TimelineChartRawDataEntry[] = parsedData.slice(1)

const [dateKey, ...series] = columns
const dateParser = timeParse('%d/%m/%Y')
const data: TimelineChartDataEntry[] = dataset.map(([dateStr, ...values]) => [
	dateParser(dateStr)!,
	...values,
])

const config: TimelineChartConfig = {
	width: 800,
	height: 500,
	xAxisConfig: {
		domain: ['2015-02-01', '2025-03-28'],
		ticksConfig: {
			startDate: '2015-03-01',
			numTicks: 11,
			dateInterval: 'year',
			intervalStep: 1,
			dateFormat: '%m/%y',
		},
	},
	yAxisConfig: {
		left: {
			domain: [1500, 6500],
			ticksConfig: {
				startVal: 1500,
				numTicks: 11,
				tickInterval: 500,
				numberFormat: ',.2r',
			},
			guideLines: true,
		},
		right: {
			domain: [120, 320],
			ticksConfig: {
				startVal: 120,
				numTicks: 11,
				tickInterval: 20,
				numberFormat: ',.2r',
			},
		},
	},
	legend: [
		{
			text: series[0],
			color: ChartColor.Green,
		},
		{
			text: series[1],
			color: ChartColor.Blue,
		},
	],
	modules: [
		{
			type: 'lineChart',
			series: [0],
			side: YAxisSide.Left,
			colors: [ChartColor.Green],
		},
		{
			type: 'lineChart',
			series: [1],
			side: YAxisSide.Right,
			colors: [ChartColor.Blue],
		},
	],
}
// const [dateKey, ...seriesKeys] = Object.keys(jsonData[0])
// const data = jsonData.map((entry) => ({ ...entry, Date: parser(entry[dateKey]) }))
// console.log(data)
---

<Layout>
	<TimelineChart data={data} series={series} config={config} client:load />
</Layout>
